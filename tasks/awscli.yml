---

- name: Set magento facts
  set_fact:
    project_dir: '/var/www/{{ project.name }}/{{ project.environment }}'
    owner: '{{ project.owner if project.owner is defined else project.environment }}'
    group: '{{ project.group if project.group is defined else project.name }}'

- name: set custom owner
  set_fact:
    owner: '{{ project_default_owner }}'
  when: project.owner is not defined and project_default_owner != ''

- name: Ensure aws config folder exists
  file:
    path: '{{ project.owner_home | default(project_dir) }}/.aws'
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0700
    state: directory
  when: project.awscli|length

- name: Set aws config
  blockinfile:
    state: present
    dest: '{{ project.owner_home | default(project_dir) }}/.aws/credentials'
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0600
    create: true
    marker: "# {mark} {{ item.profilename }}"
    #insertafter: "<body>"
    content: |
      [{{ item.profilename }}]
      {% for key, value in item.iteritems() %}
      {% if key != 'profilename' %}
      {{ key }}={{ value }}
      {% endif %}
      {% endfor %}
  when: project.awscli|length
  with_items: '{{ project.awscli }}'
  no_log: true

- name: Ensure aws config folder exists
  file:
    path: '{{ project_storage_home }}/.aws'
    owner: "{{ project_storage_owner }}"
    group: "{{ project_storage_group }}"
    mode: 0700
    state: directory
  when: project.awscli|length

- name: Set aws config
  blockinfile:
    state: present
    dest: '{{ project_storage_home }}/.aws/credentials'
    owner: "{{ project_storage_owner }}"
    group: "{{ project_storage_group }}"
    mode: 0600
    create: true
    marker: "# {mark} {{ item.profilename }}"
    #insertafter: "<body>"
    content: |
      [{{ item.profilename }}]
      {% for key, value in item.iteritems() %}
      {% if key != 'profilename' %}
      {{ key }}={{ value }}
      {% endif %}
      {% endfor %}
  when: project.awscli|length
  with_items: '{{ project.awscli }}'
  no_log: true
